#!/usr/bin/env python3

##
## P2CHART_FREQ - Print mapping chart between FFT frequencies and Pitch Angles
##                 for P2DFFT
##
## Program to calculate and plot the relationships between the FFT frequency
##   and the pitch angle returned by P2DFFT.  Since the mapping depends on
##   the number of arms (mode), multiple modes are plotted.  This is needed
##   because the frequency/pitch angle relationship is not linear.
##
##   The text output will have the following columns:
##
##      Mode  - The harmonic mode (number of arms)
##      Freqy - FFfrquency value
##      PA    - Pitch angle value based on the mode and frequency
##
##
## Version 1.1  16-Feb-2019
##
##
## Authors:  Ian Hewitt & Dr. Patrick Treuthardt,
##           NC Museum of Natural Sciences,
##           Astronomy & Astrophysics Lab,
##           Raleigh, NC USA.
##           http://github.com/treuthardt/P2DFFT
##
##
## LICENSE
##
## P2DFFT Spiral Galaxy Arm Pitch Angle Analysis Suite
## Copyright (c) 2016-2019  Ian B. Hewitt & Dr. Patrick Treuthardt
##
## The program is free software:  you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by the Free
## Software Foundation, version 3.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
## details.
##
## You should have received a copy of the GNU General Public License along with
## this program.  If not, see < https://www.gnu.org/licenses >.
##
## The authors can be contacted at:
##
##      North Carolina Museum of Natural Sciences
##      Astronomy & Astrophysics Laboratory
##      11 West Jones Street
##      Raleigh, NC, 27601  USA
##      +1.919.707.9800
##
##      -- or --
##
##      patrick.treuthardt@naturalsciences.org
##
##
## Usage: p2chart_freq [-p|--plot] -
##
##   -p|--plot        (Optional) Produce pdf plot called Freq_Chart.pdf
##
##
##  Revision History:
##         V1.1 - 16-Feb-2019 - Minor updates to comments
##                            - Remove deprecated libraries
##         V1.0 - 01-Aug-2018 - Initial version
##
##
##  Requirements/Environment:
##
##     Python 3.x
##     numpy (tested with python3-numpy)
##     matplotlib (tested with python3-matplotlib)
##
##
##  References:
##
##      Davis, Benjamin L., Berrier, Joel C., Shields, Douglas W., Kennefick,
##          Julia, Kennefick, Daniel, Seigar, Marc S., Lacy, Claud H.S., &
##          Puerari, Ivanio, 2012, ApJS, 199, 33
##

##
## LIBRARIES/IMPORTS
##

##
## System Libraries 
##

import os
import sys
import math
import argparse

##
## Additional Libraries
##

import numpy as np
import matplotlib
from matplotlib.backends.backend_pdf import PdfPages

##
## If you will be using the program without a valid X-server environment,
##   uncomment the following line
##

##matplotlib.use('Agg')


##
## MAIN PROGRAM
##

##
## CONSTANTS:
##
##   VERSION=   String that prints on output to identify version used to
##              produce the results
##   X_LEGEND=  Text for the X-Axis label
##   Y_LEGEND=  Text for the Y-Axis label
##   STEP_P   = The frequency step size in P2DFFT
##   MIN_FREQ = The smallest frequency in P2DFFT
##   FREQ_STEPS = The number of total steps in the P2DFFT frequencies
##   MIN_MODE = Lowest mode number
##   MAX_MODE = Highest mode number
##

VERSION='1.1/20190216'

X_LEGEND='Frequency (Hz)'
Y_LEGEND='Pitch Angle (Degrees)'

STEP_P=0.25
DEBUG=0
MIN_FREQ=-50.0
FREQ_STEPS=401
MIN_MODE=1
MAX_MODE=6

print('p2chart_freq Version: ',VERSION)

options = argparse.ArgumentParser(description="This Utility Will Plot P2DFFT FFT Frequency vs. Pitch Angle")
options.add_argument('-p','--plot',help='Show a Plot Window - Optional',action="store_true",default=False)
args=options.parse_args()

if args.plot:
    data=np.zeros((7,FREQ_STEPS))

print('Mode\tFreq\tPA\n')

x=np.zeros((FREQ_STEPS))
for i in range(0,FREQ_STEPS):
    x[i]=MIN_FREQ+(0.25*float(i))

for mode in range (MIN_MODE-1,MAX_MODE):
    for i in range (0,FREQ_STEPS):
        pa=math.atan2(-float(mode+1),x[i])*(1.0/(3.1415926/180.0))
        if abs(pa) > 90.0:
            pa=pa+180.0
        print(mode+1,'\t',x[i],'\t',pa)
        if args.plot:
            data[mode][i]=pa

##
## Plot Results
##
## Please note the figure name will not appear on the PDF page, so must use
##   a title line for each plot.
##

if args.plot:
    style_A=['solid','dashed','dashdot','dotted','-.',':']
    label_A=['m = 1','m = 2','m = 3','m = 4','m = 5','m = 6']

##
## Create a PDF file for all the plot pages
##

    pp=PdfPages('Freq_Chart.pdf')
    f1=pl.figure('FFT/Pitch Angle Data ('+VERSION+')')

    pl.subplot2grid((2,2),(0,0), colspan=2)
    pl.title('FFT Freq vs. Pitch Angle ('+VERSION+')')
    pl.xlabel(X_LEGEND)
    pl.ylabel(Y_LEGEND)

##
## Cycle through m1-m6 and add the data to the subplot.
##

    pl.axvline(x=0.0,color='k',lw=1.5)
    for j1 in range(MIN_MODE-1,MAX_MODE):
        pl.plot(x,data[j1],ls=style_A[j1],label=label_A[j1])

##
## Add the legend information
##

    legend = pl.legend(loc='upper right', shadow=True)
    frame = legend.get_frame()
    frame.set_facecolor('0.90')
    for lab in legend.get_texts():
        lab.set_fontsize('medium')

##
## Now we can write the plot to a PDF file.  We also check to see if the -s
##   option was specified.  If so, throw up a window with the plot.  The
##   program will not continue processing until that window is destroyed
##   by the user.
##

    pl.show()
    f1.savefig(pp, format='pdf')
    pp.close()
    pl.close(f1)

